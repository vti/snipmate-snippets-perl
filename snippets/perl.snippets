# #!/usr/bin/perl
snippet #!
	#!/usr/bin/perl

# Function
snippet sub
	sub ${1:function_name} {
		${2:#body ...}
	}
# Method
snippet m
	sub ${1:method_name} {
		my $self = shift;
		my (%params) = @_;

		${2:#body ...}

		return $self;
	}
# Getter
snippet get
	sub get_${1:name} {
		my $self = shift;
		my ($$1) = @_;

		return $self->{$1};
	}

	${2}
# Setter
snippet set
	sub set_${1:name} {
		my $self = shift;
		my ($value) = @_;

		$self->{$1} = $value;

		return $self;
	}

	${2}
# Try/Except
snippet eval
	eval {
		${1:# do something risky...}
	} || do {
		my $e = $@;
		
		${2:# handle failure...}
	}
# Try::Tiny;
snippet try
	try {
		${1:# do something risky...}
	}
	catch {
		${2:# handle failure...}
	};
# Foreach Loop
snippet for
	foreach my $${1:x} (@${2:array}) {
		${3:# body...}
	}
# Package
snippet p
	package ${1:ClassName};

	use strict;
	use warnings;

	use base '${2:ParentClass}';

	sub new {
		my $class = shift;

		my $self = {@_};
		bless $self, $class;

		return $self;
	}

	${3}

	1;
# Test
snippet t
	package ${1:ClassName}Test;

	use strict;
	use warnings;

	use base 'TestBase';

	use Test::More;
	use Test::Fatal;

	use ${2};
	
	sub should_${3} : Test {
		my $self = shift;

		${4}
	}

	1;
# Constructor
snippet n
	sub new {
		my $class = shift;

		my $self = {@_};
		bless $self, $class;

		return $self;
	}
# Read File
snippet slurp
	do { local $/; open my $fh, '<', $${1:file} or die $!; <$fh> };
	${2}
# Dumper
snippet dump
	use Data::Dumper; warn Dumper(${1:var});
snippet !
	#!/usr/bin/env perl

	use strict;
	use warnings;

	${1}
